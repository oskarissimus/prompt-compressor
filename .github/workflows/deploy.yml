name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: openai-proxy
  REGION: us-central1
  IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/openai-proxy

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check required secrets
      run: |
        if [ -z "$GCP_PROJECT_ID" ]; then
          echo "❌ GCP_PROJECT_ID secret is not set"
          exit 1
        fi
        if [ -z "$GCP_SA_KEY" ]; then
          echo "❌ GCP_SA_KEY secret is not set"  
          exit 1
        fi
        echo "✅ Required secrets are configured"
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker

    - name: Verify authentication
      run: |
        gcloud auth list
        gcloud config list project

    - name: Build Docker image
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:latest .
        echo "✅ Docker image built successfully"

    - name: Push Docker image to Container Registry
      run: |
        docker push ${{ env.IMAGE_NAME }}:latest
        echo "✅ Docker image pushed to GCR"

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image=${{ env.IMAGE_NAME }}:latest \
          --region=${{ env.REGION }} \
          --platform=managed \
          --allow-unauthenticated \
          --memory=1Gi \
          --cpu=1 \
          --timeout=3600 \
          --max-instances=10 \
          --min-instances=0 \
          --concurrency=100 \
          --set-env-vars="COMPRESSION_RATIO=${{ secrets.COMPRESSION_RATIO || '1.0' }}" \
          --port=8080 \
          --quiet

    - name: Get service URL
      run: |
        SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format="value(status.url)")
        echo "Service deployed at: $SERVICE_URL"
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV

    - name: Test deployment
      run: |
        curl -f "${{ env.SERVICE_URL }}/health" || exit 1
        echo "✅ Health check passed!" 