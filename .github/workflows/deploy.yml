name: Deploy to Google Cloud Functions

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  FUNCTION_NAME: openai-proxy
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check required secrets
      run: |
        if [ -z "$GCP_PROJECT_ID" ]; then
          echo "❌ GCP_PROJECT_ID secret is not set"
          exit 1
        fi
        if [ -z "$GCP_SA_KEY" ]; then
          echo "❌ GCP_SA_KEY secret is not set"  
          exit 1
        fi
        echo "✅ Required secrets are configured"
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Generate requirements.txt from uv
      run: |
        uv export --format requirements-txt --output-file requirements.txt --no-dev --no-hashes
        echo "Generated requirements.txt:"
        cat requirements.txt

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Verify authentication
      run: |
        gcloud auth list
        gcloud config list project

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Deploy to Cloud Functions
      run: |
        gcloud functions deploy ${{ env.FUNCTION_NAME }} \
          --gen2 \
          --runtime=python311 \
          --region=${{ env.REGION }} \
          --source=. \
          --entry-point=main \
          --trigger-http \
          --allow-unauthenticated \
          --memory=512MB \
          --timeout=540s \
          --max-instances=10 \
          --set-env-vars="COMPRESSION_RATIO=${{ secrets.COMPRESSION_RATIO || '1.0' }}" \
          --quiet

    - name: Get function URL
      run: |
        FUNCTION_URL=$(gcloud functions describe ${{ env.FUNCTION_NAME }} --region=${{ env.REGION }} --format="value(serviceConfig.uri)")
        echo "Function deployed at: $FUNCTION_URL"
        echo "FUNCTION_URL=$FUNCTION_URL" >> $GITHUB_ENV

    - name: Test deployment
      run: |
        curl -f "${{ env.FUNCTION_URL }}/health" || exit 1
        echo "Health check passed!" 